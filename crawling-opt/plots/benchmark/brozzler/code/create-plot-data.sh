#! /usr/bin/env bash

# Parse the output generated by the benchmarking scripts
# and generate a data that can be processed by the plotting scripts.

# $1 -> Path to the input1 (performance data) directory
# $2 -> Path to the input2 (PLT data) directory
# $2 -> Path to the output directory

NODECOMMON=/vault-swift/goelayu/research-ideas/crawling-opt/node/util/


# parse CPU data
echo usage time scale > $3/cpu.p
ls $1 | while read scale; do cat $1/$scale/cpu_profile | grep -v usage | awk -F',' -v scale=$scale '{print $1,$2,scale}' ; done >> $3/cpu.p
echo Done parsing CPU data

#parse network data
echo usage time scale > $3/nw.p
ls  $1 | while read scale; do cat $1/$scale/nw_profile | grep "Total send and receive rate" | awk -v scale=$scale -v t=0 '{print $6,t,scale;t+=2}' ; done | grep -v Kb | sed 's/Mb//g' >> $3/nw.p
echo Done parsing NW data

#parse disk data
echo usage time scale > $3/disk.p
ls $1 | while read scale; do cat $1/$scale/disk_profile | grep sda | head -n 150 | awk -v scale=$scale -v t=0 '{print ($3+$4)*8/1000,t,scale;t+=1}' ; done >> $3/disk.p
echo Done parsing disk data

#parse PLT data as well
# echo plt scale > $3/plt.p
# ls $2 | while read scale ; do find $2/$scale -iname PLT | while read plt; do cat $plt ; echo ''; done | awk -v scale=$scale '{print $1,scale}' ; done >> $3/plt.p
# echo Done parsing PLT data

# #parse network data as well
# echo net scale > $3/reqnw.p
# ls $2 | while read scale ; do find $2/$scale -iname network.log | while read net; do echo "node $NODECOMMON/common.js -t dl -i $net" ; done | parallel | awk -v scale=$scale '{print $1,scale}' ; done >> $3/reqnw.p
# echo Done parsing network data

#generate all plots
./cpu.r $3/cpu.p $3/cpu.png &
./nw.r $3/nw.p $3/nw.png &
./disk.r $3/disk.p $3/disk.png &
# ./plt.r $3/plt.p $3/plt.png &
# ./reqnw.r $3/reqnw.p $3/reqnw.png & 

wait